{"ast":null,"code":"var _jsxFileName = \"/Volumes/HOLK/\\u05EA\\u05D5\\u05DB\\u05E0\\u05D5\\u05EA /Web/charts and graphs/apexchart/src/App.js\";\nimport React, { Component } from \"react\";\nimport Donut from \"../src/components/Donut\";\nimport Graph from \"../src/components/graph\";\nimport Column from \"../src/components/Column\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        inputText: e.target.value\n      });\n    };\n\n    this.onIncrement = number => {\n      const state_copy = Object.assign({}, this.state.series);\n      console.log(state_copy[\"0\"][\"data\"]);\n      state_copy[\"0\"][\"data\"].push(number);\n      console.log(state_copy);\n      this.setState({\n        arr: state_copy\n      });\n      this.setState({\n        inputText: \"\"\n      }); // this.setState({ series: state_copy });\n    };\n\n    this.state2 = {\n      options: {},\n      series: [44, 55, 41, 17, 15],\n      labels: [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    };\n    this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: [\"א\", \"ב\", \"ג\", \"ד\", \"ה\", \"ו\", \"ז\"]\n        }\n      },\n      series: [{\n        name: \"series-1\",\n        data: [30, 40, 45, 50, 49, 60, 70]\n      }],\n      arr: [],\n      inputText: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mixed-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Column, {\n      values: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => this.onIncrement(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Graph, {\n      values: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"donut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Donut, {\n      values: this.state2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/HOLK/תוכנות /Web/charts and graphs/apexchart/src/App.js"],"names":["React","Component","Donut","Graph","Column","App","constructor","props","handleChange","e","setState","inputText","target","value","onIncrement","number","state_copy","Object","assign","state","series","console","log","push","arr","state2","options","labels","chart","id","xaxis","categories","name","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Donut from \"../src/components/Donut\";\nimport Graph from \"../src/components/graph\";\nimport Column from \"../src/components/Column\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state2 = {\n      options: {},\n      series: [44, 55, 41, 17, 15],\n      labels: [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    };\n\n    this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: [\"א\", \"ב\", \"ג\", \"ד\", \"ה\", \"ו\", \"ז\"]\n        }\n      },\n      series: [\n        {\n          name: \"series-1\",\n          data: [30, 40, 45, 50, 49, 60, 70]\n        }\n      ],\n      arr: [],\n      inputText: \"\"\n    };\n  }\n  handleChange = e => {\n    this.setState({\n      inputText: e.target.value\n    });\n  };\n  onIncrement = number => {\n    const state_copy = Object.assign({}, this.state.series);\n    console.log(state_copy[\"0\"][\"data\"]);\n    state_copy[\"0\"][\"data\"].push(number);\n    console.log(state_copy);\n    this.setState({ arr: state_copy });\n    this.setState({ inputText: \"\" });\n    // this.setState({ series: state_copy });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Column values={this.state} />\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n            </label>\n            <button onClick={() => this.onIncrement(1)}>Submit</button>\n            <Graph values={this.state} />\n            <div className=\"donut\">\n              <Donut values={this.state2} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}