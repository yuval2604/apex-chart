{"ast":null,"code":"var _jsxFileName = \"/Volumes/HOLK/\\u05EA\\u05D5\\u05DB\\u05E0\\u05D5\\u05EA /Web/charts and graphs/apexchart/src/App.js\";\nimport React, { Component } from \"react\";\nimport Donut from \"../src/components/Donut\";\nimport Graph from \"../src/components/graph\";\nimport Column from \"../src/components/Column\";\nimport Chart from \"react-apexcharts\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        inputText: e.target.value\n      });\n    };\n\n    this.onIncrement = () => {\n      const state_copy = Object.assign({}, this.state);\n      state_copy.series[\"0\"][\"data\"].push(parseInt(this.state.inputText));\n      this.setState({\n        inputText: \"\"\n      });\n      this.setState({\n        series: state_copy.series\n      });\n      this.setState({\n        num: 1\n      });\n      return;\n    };\n\n    this.state2 = {\n      options: {},\n      series: [44, 55, 41, 17, 15],\n      labels: [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    };\n    this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: [\"א\", \"ב\", \"ג\", \"ד\", \"ה\", \"ו\", \"ז\"]\n        }\n      },\n      series: [{\n        name: \"series-1\",\n        data: []\n      }],\n      num: 0,\n      inputText: \"\"\n    };\n  }\n\n  getBadgeClasses() {\n    return React.createElement(\"h1\", {\n      style: \"visibility: hidden;\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Just reload\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mixed-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Column, {\n      values: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputText,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => this.onIncrement(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Graph, {\n      values: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"donut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Donut, {\n      values: this.state2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/HOLK/תוכנות /Web/charts and graphs/apexchart/src/App.js"],"names":["React","Component","Donut","Graph","Column","Chart","ReactApexChart","App","constructor","props","handleChange","e","setState","inputText","target","value","onIncrement","state_copy","Object","assign","state","series","push","parseInt","num","state2","options","labels","chart","id","xaxis","categories","name","data","getBadgeClasses","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Donut from \"../src/components/Donut\";\nimport Graph from \"../src/components/graph\";\nimport Column from \"../src/components/Column\";\nimport Chart from \"react-apexcharts\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state2 = {\n      options: {},\n      series: [44, 55, 41, 17, 15],\n      labels: [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    };\n\n    this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: [\"א\", \"ב\", \"ג\", \"ד\", \"ה\", \"ו\", \"ז\"]\n        }\n      },\n      series: [\n        {\n          name: \"series-1\",\n          data: []\n        }\n      ],\n      num: 0,\n      inputText: \"\"\n    };\n  }\n  handleChange = e => {\n    this.setState({\n      inputText: e.target.value\n    });\n  };\n\n  getBadgeClasses() {\n    return <h1 style=\"visibility: hidden;\">Just reload</h1>;\n  }\n\n  onIncrement = () => {\n    const state_copy = Object.assign({}, this.state);\n    state_copy.series[\"0\"][\"data\"].push(parseInt(this.state.inputText));\n    this.setState({ inputText: \"\" });\n    this.setState({\n      series: state_copy.series\n    });\n    this.setState({ num: 1 });\n    return;\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Column values={this.state} />\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                value={this.state.inputText}\n                onChange={this.handleChange}\n              />\n            </label>\n            <button onClick={() => this.onIncrement()}>Submit</button>\n            <Graph values={this.state} />\n            <div className=\"donut\">\n              <Donut values={this.state2} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}