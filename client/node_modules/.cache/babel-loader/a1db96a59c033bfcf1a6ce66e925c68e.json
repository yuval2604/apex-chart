{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Web/charts and graphs/apexchart/client/src/components/SplineCharts.jsx\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ReactFileReader from \"react-file-reader\";\nimport text from \"./israel.txt\";\n\nclass SplineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldrender: 0,\n      data: [],\n      dates: [],\n      cases: [],\n      newcases: [],\n      hardcases: [],\n      dead: [],\n      series: [{\n        name: \"series1\",\n        data: [3824, 4316, 4782, 5523, 6168, 6857, 7120]\n      }],\n      options: {\n        chart: {\n          height: 350,\n          type: \"area\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: \"smooth\"\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: []\n        },\n        tooltip: {\n          x: {\n            format: \"dd/MM/yy\"\n          }\n        }\n      }\n    };\n  }\n\n  handleFetch() {\n    console.log(\"handle Fetch\");\n    fetch(\"http://127.0.0.1:3001/api/is\").then(data => data.json()).then(res => this.setState({\n      data: res.data.split(\"[\")\n    })).then(res => this.handleLoop(this.state.data)); // .then((res) => console.log(this.state.data[3].split(\" \")[0])); //date\n  }\n\n  handleLoop(data) {\n    console.log(\"handleLoop\");\n\n    for (var i in data) {\n      var newd = data[i].split(\" \");\n      this.state.dates[i] = newd[0];\n      this.state.options.xaxis.categories[i] = newd[0];\n      this.state.cases[i] = newd[1];\n      this.state.newcases[i] = newd[2];\n      this.state.hardcases[i] = newd[3];\n      this.state.dead[i] = newd[4];\n    }\n\n    console.log(\"handle loop finish \", this.state);\n    this.setState({\n      shouldrender: 1\n    });\n  }\n\n  componentWillMount() {\n    // this.handleFetch();\n    console.log(\"handle Fetch\");\n    fetch(\"http://127.0.0.1:3001/api/is\").then(data => data.json()).then(res => this.setState({\n      data: res.data.split(\"[\")\n    })).then(res => this.handleLoop(this.state.data));\n    console.log(\"finish\", this.state);\n  }\n\n  handleChart() {\n    if (this.state.shouldrender == 1) {\n      return React.createElement(ReactApexChart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"area\",\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    console.log(\"render\", this.state);\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.shouldrender == 1 ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"hello\") : React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"area\",\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SplineChart;","map":{"version":3,"sources":["/Users/user/Documents/Web/charts and graphs/apexchart/client/src/components/SplineCharts.jsx"],"names":["React","Component","ReactApexChart","ReactFileReader","text","SplineChart","constructor","props","state","shouldrender","data","dates","cases","newcases","hardcases","dead","series","name","options","chart","height","type","dataLabels","enabled","stroke","curve","xaxis","categories","tooltip","x","format","handleFetch","console","log","fetch","then","json","res","setState","split","handleLoop","i","newd","componentWillMount","handleChart","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ReactFileReader from \"react-file-reader\";\n\nimport text from \"./israel.txt\";\n\nclass SplineChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shouldrender: 0,\n      data: [],\n      dates: [],\n      cases: [],\n      newcases: [],\n      hardcases: [],\n      dead: [],\n\n      series: [\n        {\n          name: \"series1\",\n          data: [3824, 4316, 4782, 5523, 6168, 6857, 7120],\n        },\n      ],\n      options: {\n        chart: {\n          height: 350,\n          type: \"area\",\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        stroke: {\n          curve: \"smooth\",\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: [],\n        },\n        tooltip: {\n          x: {\n            format: \"dd/MM/yy\",\n          },\n        },\n      },\n    };\n  }\n\n  handleFetch() {\n    console.log(\"handle Fetch\");\n    fetch(\"http://127.0.0.1:3001/api/is\")\n      .then((data) => data.json())\n      .then((res) => this.setState({ data: res.data.split(\"[\") }))\n      .then((res) => this.handleLoop(this.state.data));\n    // .then((res) => console.log(this.state.data[3].split(\" \")[0])); //date\n  }\n  handleLoop(data) {\n    console.log(\"handleLoop\");\n    for (var i in data) {\n      var newd = data[i].split(\" \");\n      this.state.dates[i] = newd[0];\n      this.state.options.xaxis.categories[i] = newd[0];\n      this.state.cases[i] = newd[1];\n      this.state.newcases[i] = newd[2];\n      this.state.hardcases[i] = newd[3];\n      this.state.dead[i] = newd[4];\n    }\n\n    console.log(\"handle loop finish \", this.state);\n    this.setState({ shouldrender: 1 });\n  }\n\n  componentWillMount() {\n    // this.handleFetch();\n    console.log(\"handle Fetch\");\n    fetch(\"http://127.0.0.1:3001/api/is\")\n      .then((data) => data.json())\n      .then((res) => this.setState({ data: res.data.split(\"[\") }))\n      .then((res) => this.handleLoop(this.state.data));\n    console.log(\"finish\", this.state);\n  }\n\n  handleChart() {\n    if (this.state.shouldrender == 1) {\n      return (\n        <ReactApexChart\n          options={this.state.options}\n          series={this.state.series}\n          type=\"area\"\n          height={300}\n        />\n      );\n    }\n  }\n\n  render() {\n    console.log(\"render\", this.state);\n    return (\n      <div id=\"chart\">\n        {this.state.shouldrender == 1 ? (\n          <p>hello</p>\n        ) : (\n          <ReactApexChart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"area\"\n            height={300}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default SplineChart;\n"]},"metadata":{},"sourceType":"module"}